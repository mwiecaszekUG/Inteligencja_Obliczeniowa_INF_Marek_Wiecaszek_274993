Number of cities to test = 10
All possible connections:
Khada --- 72 --- Pālanpur
Hialeah Gardens --- 228 --- South Vineland
Pālanpur --- 137 --- Wieluń
Pālanpur --- 243 --- South Vineland
Strezhevoy --- 179 --- Saalfelden am Steinernen Meer
Wieluń --- 139 --- Saalfelden am Steinernen Meer
South Vineland --- 63 --- Kladno
Hialeah Gardens --- 136 --- Wieluń
South Vineland --- 165 --- Baldwin
Saalfelden am Steinernen Meer --- 240 --- Pingnan
Baldwin --- 172 --- Pingnan
Khada --- 155 --- Kladno
Baldwin --- 36 --- Strezhevoy
Kladno --- 91 --- Strezhevoy
Khada --- 76 --- Pingnan

List of all cities:
['Pālanpur', 'Kladno', 'Wieluń', 'Saalfelden am Steinernen Meer', 'Hialeah Gardens', 'Strezhevoy', 'Pingnan', 'South Vineland', 'Khada', 'Baldwin']
[8, 2, 7]
[7, 8, 5]
[0, 3, 4]
[5, 2, 6]
[7, 2]
[3, 9, 1]
[3, 9, 8]
[4, 0, 1, 9]
[0, 1, 6]
[7, 6, 5]
Cost of fitness genetic:  -589
Route taken genetic [0, 8, 6, 9, 5, 1, 7, 4, 2, 3]
Cost of the route taken genetic:  1517
Time of operation:  7.196855068206787
2022-04-26 10:01:51,208 - pyswarms.single.global_best - INFO - Optimize for 3000 iters with {'c1': 0.05, 'c2': 0.5, 'w': 0.4, 'k': 10, 'p': 1}
pyswarms.single.global_best: 100%|██████████|3000/3000, best_cost=-2e+4
2022-04-26 10:05:23,520 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -20000.0, best pos: [5.3098738  3.4693445  4.32707015 5.69329059 5.03641238 4.64690345
 4.95001072 3.90519338 4.54241604 3.12341057 4.74576797 5.16372748
 1.81244667 4.68470424 4.75061098 6.70267129 4.54682719 5.65992322
 4.06801231 5.05274874]
Time of swarm:  212.31201148033142

Process finished with exit code 0


1013 - droga ( 1-9-7-10-6-2-8-5-3-4)

(była zanieczyszczona ruchami w miejscu)

(mały koszt ruchy pomiędzy 2 miastami)
Cost of fitness genetic:  -649
Route taken genetic [0, 4, 5, 4, 5, 4, 5, 6, 7, 5, 4, 8, 4, 5, 4, 5, 4, 5, 4, 5, 4]
Cost of the route taken genetic:  526
(aby efektywnie wykorzystywać algorytm w realnym życiu należało by ręcznie zwiększyć koszt takiej drogi,
po zauważeni zapętlenia w wyniku, aby uzyskać prawdziwy najlepszy wynik


(dla wiekszej ilości miast musiałem zwiększyć ilość dróg do 3*liczba_miast oraz dodać założenie, że każde miasto
ma przynajmniej 2 połączenia, aby uniknąć zapętlania (to założenie wydaję się być realistyczne gdyż
patrząc na mapę jesteśmy sobie w stanie wyobrazić że z każdego miasta jesteśmy w stanie pojechać bezpośrednio do 2 innych)

Cost of fitness genetic:  -29894
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Znalezione nielegalny ruch (poleciał samolotem)
Odwiedzone miasta:  53
Route taken genetic [0, 12, 90, 50, 12, 90, 16, 90, 25, 66, 64, 51, 77, 66, 25, 37, 64, 51, 64, 66, 64, 17, 64, 51, 64, 93, 51, 77, 66, 51, 64, 66, 25, 64, 50, 90, 25, 64, 60, 25, 64, 51, 64, 50, 90, 25, 12, 90, 12, 80, 12, 90, 98, 28, 98, 57, 7, 51, 98, 28, 98, 52, 98, 90, 98, 28, 82, 32, 7, 82, 65, 19, 27, 65, 82, 93, 51, 34, 51, 64, 37, 67, 38, 67, 38, 67, 38, 67, 37, 64, 37, 53, 31, 38, 53, 31, 53, 38, 67, 37, 53, 31, 38, 67, 47, 31, 38, 31, 53, 37, 64, 37, 53, 38, 89, 5, 95, 54, 95, 54, 58, 47, 58, 47, 0, 91, 0, 14, 82, 49, 71, 86, 71, 86, 71, 82, 49, 82, 49, 82, 28, 98, 52, 73, 22, 73, 52, 93, 64, 37, 64, 51, 66, 64, 41, 64, 66, 51, 64, 25, 66, 64, 96, 31, 96, 64, 96, 34, 89, 38, 67, 38, 67, 38, 31, 38, 67, 2, 82, 32, 7, 99, 45, 30, 61, 7, 8, 9, 68]
Cost of the route taken genetic:  15336
Time of operation:  6931.835267543793

Process finished with exit code 0
